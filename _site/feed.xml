<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-07-12T10:45:08-05:00</updated><id>/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">DTN</title><link href="/other/dtn" rel="alternate" type="text/html" title="DTN" /><published>2021-07-09T00:00:00-05:00</published><updated>2021-07-09T00:00:00-05:00</updated><id>/other/dtn</id><content type="html" xml:base="/other/dtn">&lt;h1 id=&quot;project-for-dtn&quot;&gt;Project for DTN&lt;/h1&gt;
&lt;div style=&quot;padding:56.25% 0 0 0;position:relative;margin: 1rem 0;&quot;&gt;&lt;iframe src=&quot;https://player.vimeo.com/video/574041840?badge=0&amp;amp;autopause=0&amp;amp;player_id=0&amp;amp;app_id=58479&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; picture-in-picture&quot; allowfullscreen=&quot;&quot; style=&quot;position:absolute;top:0;left:0;width:100%;height:100%;&quot; title=&quot;IMG_4814&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;script src=&quot;https://player.vimeo.com/api/player.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;accessing-the-refactored-widget&quot;&gt;Accessing the Refactored Widget&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Find a live preview &lt;a href=&quot;https://dtnnewslistwidget.gatsbyjs.io/&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Find the code for the project &lt;a href=&quot;https://github.com/ndmekala/dtn-news-list-widget&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;This is a refactoring of DTN News List Widget (an embeddable widget that lists articles from DTN‚Äôs Content Services). You can find the original version &lt;a href=&quot;https://cs-widget-docs.dtn.com/news-list-widget/news-list-widget-1.0-latest.html&quot;&gt;here&lt;/a&gt;, in the DTN Content Services documentation.
I opted to add two levels of functionality. The first solves a problem and the second makes the widget more dynamic.&lt;/p&gt;
&lt;h2 id=&quot;filling-holes&quot;&gt;Filling Holes&lt;/h2&gt;
&lt;p&gt;The problem with the widget at present is that the data it pulls from the API doesn‚Äôt always include an associated image. This isn‚Äôt accounted for in the rendering of the widget, so the appearance of the articles is uneven. There are holes.&lt;/p&gt;
&lt;div class=&quot;post__content-wrapper&quot;&gt;
&lt;div class=&quot;post__dw-80-mw-100&quot;&gt;
		&lt;figure class=&quot;post__figure-w-100&quot;&gt;
			&lt;img class=&quot;post__image-w-100&quot; src=&quot;/assets/images/dtn/dtn-news-list-widget.png&quot; alt=&quot;DTN widget before changes&quot; /&gt;
			&lt;figcaption&gt;Before changes&lt;/figcaption&gt;
		&lt;/figure&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I rebuilt this widget and made it validate image data. It now checks to see if image information exists, and renders a default image if it doesn‚Äôt.
Here‚Äôs the JSX:&lt;/p&gt;
&lt;div class=&quot;post__content-wrapper&quot;&gt;
&lt;script src=&quot;https://gist.github.com/ndmekala/79f0d253f5749c9251f70a812c378704.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;No more holes!&lt;/p&gt;
&lt;div class=&quot;post__content-wrapper&quot;&gt;
    &lt;div class=&quot;post__dw-80-mw-100&quot;&gt;
		&lt;figure class=&quot;post__figure-w-100&quot;&gt;
			&lt;img class=&quot;post__image-w-100&quot; src=&quot;/assets/images/dtn/dtn-news-list-widget-revised.png&quot; alt=&quot;DTN widget after changes&quot; /&gt;
			&lt;figcaption&gt;After changes&lt;/figcaption&gt;
		&lt;/figure&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;adding-pagination&quot;&gt;Adding Pagination&lt;/h2&gt;
&lt;p&gt;Another limitation of the current widget is that it doesn‚Äôt make full use of all available article data. The data can be broken into pages and pagination controls can be added. This allows viewers to quickly scroll through all available article data, making the widget more dynamic. You can test out how it works at the preview above.&lt;/p&gt;</content><author><name></name></author><category term="other" /><summary type="html">Project for DTN Accessing the Refactored Widget Find a live preview here. Find the code for the project here.</summary></entry><entry><title type="html">Gatsby JS from 10,000 Feet</title><link href="/garden/gatsby-from-10000ft" rel="alternate" type="text/html" title="Gatsby JS from 10,000 Feet" /><published>2021-06-29T00:00:00-05:00</published><updated>2021-06-29T00:00:00-05:00</updated><id>/garden/gatsby-from-10000ft</id><content type="html" xml:base="/garden/gatsby-from-10000ft">&lt;p&gt;These are notes from Zach Gordon‚Äôs &lt;a href=&quot;https://www.youtube.com/watch?v=GuvAMcsoreI&quot;&gt;video&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;What?&lt;/strong&gt; Gatsby is a static site generator that runs on your computer with Node.js and generates pre-configured HTML.
    &lt;ul&gt;
      &lt;li&gt;It uses GraphQL to get data from anywhere.&lt;/li&gt;
      &lt;li&gt;It uses React for templating (and CSS for styling).&lt;/li&gt;
      &lt;li&gt;It has a plugin architecture.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Why?&lt;/strong&gt; It‚Äôs fast because the HTML is pre-rendered; the server doesn‚Äôt need to generate HTML for you after being called.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Why?&lt;/strong&gt; It‚Äôs secure because hacking the server just means accessing HTML files.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Why?&lt;/strong&gt; It offers an appealing modern development stack.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Why?&lt;/strong&gt; It has a solid team, an open source community, and solid documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;üëâüèæ (Personal &lt;strong&gt;why&lt;/strong&gt;) I plan to use it for an upcoming project to take advantage of its Markdown integration, implementation of React, and speed ‚ö°Ô∏è.&lt;/p&gt;

&lt;p&gt;üö® This is whole different world than create-react-app! &lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;See more&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="garden" /><summary type="html">These are notes from Zach Gordon‚Äôs video.</summary></entry><entry><title type="html">Institute for Justice</title><link href="/other/institute-for-justice" rel="alternate" type="text/html" title="Institute for Justice" /><published>2021-06-23T00:00:00-05:00</published><updated>2021-06-23T00:00:00-05:00</updated><id>/other/institute-for-justice</id><content type="html" xml:base="/other/institute-for-justice">&lt;h1&gt;Project for the Institute for Justice&lt;/h1&gt;

&lt;p&gt;Hello! My name is Nirmal Mekala. I applied to the Institute for Justice web developer position a little while ago and wanted to send a little follow up message. I‚Äôm still interested in the role. I love the work that the Institute for Justice is doing. As a resident of Minneapolis, I‚Äôm grateful that IJ has removed barriers to economic participation for local taxi drivers and African hair braiding salons. Furthermore, I‚Äôm passionate about ending qualified immunity in an era where (despite steps of progress) police accountability is hard to come by. I wholeheartedly support the goals of IJ.&lt;/p&gt;

&lt;p&gt;I‚Äôm also confident that I can provide value to IJ in the web developer position. But I thought it might be worth it &lt;em&gt;show&lt;/em&gt; that rather than just say it. Check out some proposals for sprucing up the navigation bar of IJ‚Äôs landing page. And feel free to implement what I‚Äôve proposed if you‚Äôd like!&lt;/p&gt;

&lt;h2&gt;Rationale&lt;/h2&gt;

&lt;p&gt;The homepage of the Institute for Justice does a great job of drawing users in to IJ‚Äôs important work. You immediately see faces and get the message: ‚ÄúThis place is helping &lt;em&gt;real&lt;/em&gt; people!‚Äù&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But once you start to navigate the page, the user experience gets a little clunky.&lt;/strong&gt; The ‚ÄúSupport IJ,‚Äù ‚ÄúGive Now,‚Äù and ‚ÄúReport Abuse‚Äù buttons all compete for your attention. And when you hover your mouse over these buttons, you get surprising responses‚Äî‚ÄúGive Now‚Äù turns dark and the hamburger menu suddenly flashes a new color scheme.&lt;/p&gt;

&lt;p&gt;Smoothing out these little bumps in the UX is not just a vanity project. Thoughtful design increases the likelihood of users engaging with calls to action (e.g. the ‚ÄúGive Now‚Äù button). &lt;strong&gt;Implementing this redesign could increase donations.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Proposal&lt;/h2&gt;

&lt;p&gt;I created a new navigation bar. By giving it a dark but translucent color, the logo stands out more, but you still see the background image. The user‚Äôs eye is drawn to the ‚ÄúGive Now‚Äù button by a pop of color, but they can still see the ‚ÄúReport Abuse‚Äù and ‚ÄúSupport IJ‚Äù buttons clearly.&lt;/p&gt;

&lt;div class=&quot;post__content-wrapper&quot;&gt;
	&lt;div class=&quot;post__dw-80-mw-100&quot;&gt;
		&lt;figure class=&quot;post__figure-w-100&quot;&gt;
			&lt;img class=&quot;post__image-w-100&quot; src=&quot;/assets/images/institute-for-justice/ij-before.png&quot; alt=&quot;Institute for Justice website before changes&quot;&gt;
			&lt;figcaption&gt;Before changes&lt;/figcaption&gt;
		&lt;/figure&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;post__content-wrapper&quot;&gt;
	&lt;div class=&quot;post__dw-80-mw-100&quot;&gt;
		&lt;figure class=&quot;post__figure-w-100&quot;&gt;
			&lt;img class=&quot;post__image-w-100&quot; src=&quot;/assets/images/institute-for-justice/ij-after.png&quot; alt=&quot;Institute for Justice website after changes&quot;&gt;
			&lt;figcaption&gt;After changes&lt;/figcaption&gt;
		&lt;/figure&gt;
	&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Then, instead of changing colors or adding borders around icons, the site can respond to user‚Äôs hover action with an elegant animation of the button or icon.&lt;/p&gt;

&lt;div class=&quot;post__content-wrapper&quot;&gt;
	&lt;div class=&quot;post__dw-80-mw-100&quot;&gt;
		&lt;figure class=&quot;post__figure-w-100&quot;&gt;
			&lt;img class=&quot;post__image-w-100&quot; src=&quot;/assets/images/institute-for-justice/ij-nav-before.gif&quot; alt=&quot;Institute for Justice navigation bar before changes&quot;&gt;
			&lt;figcaption&gt;Before changes&lt;/figcaption&gt;
		&lt;/figure&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;post__content-wrapper&quot;&gt;
	&lt;div class=&quot;post__dw-80-mw-100&quot;&gt;
		&lt;figure &gt;
			&lt;img class=&quot;post__image-w-100&quot; src=&quot;/assets/images/institute-for-justice/ij-nav-after.gif&quot; alt=&quot;Institute for Justice navigation bar after changes&quot;&gt;
			&lt;figcaption&gt;After changes&lt;/figcaption&gt;
		&lt;/figure&gt;
	&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You can view all the code used for these changes below. Just a few lines of CSS can help people use the site more easily.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;c&quot;&gt;/* Adding a dark, transluscent nav background */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.re-menu-container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Adjusting colors and hover animations on menu items */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.re-menu-box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-in-out&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.re-menu-box&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.re-menu-search&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-in-out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.re-menu-search&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.re-menu-donate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#10757b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#10757b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-in-out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;letter-spacing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.re-menu-donate&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.re-menu-report-abuse&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-in-out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;letter-spacing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.re-menu-report-abuse&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Changing colors on the ‚ÄúSupport IJ‚Äù button */&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* (This is not currently a class on the website) */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.support-ij&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#FFFFFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;border-right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#393939&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I believe these changes can provide real value for the Institute for Justice and have the potential to increase funding. And while these suggestions are related to the front-facing user experience, they demonstrate the conscientious problem-solving that I apply across the web development stack.&lt;/p&gt;

&lt;p&gt;Thank you for taking the time to read this note. I look forward to hearing from you!&lt;/p&gt;

&lt;p&gt;Best,&lt;/p&gt;

&lt;p&gt;Nirmal Mekala&lt;/p&gt;</content><author><name></name></author><category term="other" /><summary type="html">Project for the Institute for Justice</summary></entry><entry><title type="html">GraphQL from 10,000 Feet</title><link href="/garden/graphql-10000ft" rel="alternate" type="text/html" title="GraphQL from 10,000 Feet" /><published>2021-06-15T00:00:00-05:00</published><updated>2021-06-15T00:00:00-05:00</updated><id>/garden/graphql-10000ft</id><content type="html" xml:base="/garden/graphql-10000ft">&lt;p&gt;(I got this info from &lt;a href=&quot;https://podcasts.apple.com/us/podcast/graphql-101-with-anthony-campolo/id1539945251?i=1000522248934&quot;&gt;this&lt;/a&gt; podcast.)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;What:&lt;/strong&gt; GraphQL is a query language, it serves as a layer between front-end and back end&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Why:&lt;/strong&gt; GraphQL minimizes type errors&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Why:&lt;/strong&gt; GraphQL allows you to query for the specific bite-sized nugget of data you need&lt;/li&gt;
  &lt;li&gt;Though often associated with #NodeJS and #reactjs , it‚Äôs compatible with a variety of front- and back-ends&lt;/li&gt;
  &lt;li&gt;To keep up to speed on GraphQL, follow the broader conversation, not just one person. (But a good person to start with would be the podcast‚Äôs guest: 
@ajcwebdev.)&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="garden" /><summary type="html">(I got this info from this podcast.) What: GraphQL is a query language, it serves as a layer between front-end and back end Why: GraphQL minimizes type errors Why: GraphQL allows you to query for the specific bite-sized nugget of data you need Though often associated with #NodeJS and #reactjs , it‚Äôs compatible with a variety of front- and back-ends To keep up to speed on GraphQL, follow the broader conversation, not just one person. (But a good person to start with would be the podcast‚Äôs guest: @ajcwebdev.)</summary></entry><entry><title type="html">I Believe in Programming Principles üß†</title><link href="/garden/programming-principles-language-skills" rel="alternate" type="text/html" title="I Believe in Programming Principles üß†" /><published>2021-06-13T00:00:00-05:00</published><updated>2021-06-13T00:00:00-05:00</updated><id>/garden/programming-principles-language-skills</id><content type="html" xml:base="/garden/programming-principles-language-skills">&lt;p&gt;I‚Äôll keep this one short. I believe that there is a distinct value in &lt;em&gt;thinking&lt;/em&gt; like a programmer that transcends the knowledge of a particular language.&lt;/p&gt;

&lt;p&gt;Actually‚ÄîI don‚Äôt just believe that there is. I &lt;em&gt;know&lt;/em&gt; that there is.&lt;/p&gt;

&lt;p&gt;Right now I‚Äôm diving deep into the React framework. Building apps which fired off numerous components based off of an array of data &lt;em&gt;changed the way I think&lt;/em&gt; about building pages in general. ‚ÄúHard coding is for fools! Automate that mess!‚Äù&lt;/p&gt;

&lt;p&gt;As a result I refactored an aspect of my portfolio page with the same principle in mind. I figured out a way‚Äîin Liquid, a totally different framework‚Äîto do essentially the same thing I was doing in React. Same programming principle. Different language.&lt;/p&gt;

&lt;p&gt;My lightbulb üí° moment was hardly the Copernican revolution. But the whole process did cement in my mind the idea that programming know-how is &lt;em&gt;independent&lt;/em&gt; (at least to a degree) of specific languages.&lt;/p&gt;</content><author><name></name></author><category term="garden" /><summary type="html">I‚Äôll keep this one short. I believe that there is a distinct value in thinking like a programmer that transcends the knowledge of a particular language.</summary></entry><entry><title type="html">Are Programmers Lazy? üßê</title><link href="/garden/are-programmers-lazy" rel="alternate" type="text/html" title="Are Programmers Lazy? üßê" /><published>2021-05-23T00:00:00-05:00</published><updated>2021-05-23T00:00:00-05:00</updated><id>/garden/are-programmers-lazy</id><content type="html" xml:base="/garden/are-programmers-lazy">&lt;p&gt;Programmers often say they‚Äôre lazy. They say this meaning that they would rather invent (or discover) a solution that cuts out grunt work than do the same tasks over and over.&lt;/p&gt;

&lt;p&gt;I think there‚Äôs a clearer way to frame it. Good programmers are lazy with respect to &lt;em&gt;grunt&lt;/em&gt; work, but marked by diligence when it comes to the &lt;em&gt;mental&lt;/em&gt; work of refactoring and eliminating redundancy.&lt;/p&gt;

&lt;p&gt;That said, there &lt;em&gt;is&lt;/em&gt; some wisdom in championing the traditional ‚Äúprogrammers are lazy‚Äù trope. It incentivizes &lt;em&gt;mental&lt;/em&gt; work by highlighting that mental work can save you from &lt;em&gt;grunt&lt;/em&gt; work.&lt;/p&gt;

&lt;p&gt;So, after all that, I guess I‚Äôm refactoring my site‚Äôs project section because I‚Äôm lazy.&lt;/p&gt;

&lt;p&gt;After updating this section with a few projects, I‚Äôve been struck with how fragile the process of hard-coding each new project in HTML. What if I forget to update one of the links? What if I ruin the section by mixing up the container hierarchy?&lt;/p&gt;

&lt;p&gt;I‚Äôve been trying to think of a solution to simply feed data to‚Ä¶¬†something‚Ä¶¬†and have it render each project. I would already know how to do this if my site were using React. I &lt;em&gt;could&lt;/em&gt; build this with vanilla JavaScript by iterating over an array of project data and appending each project card to the project section.&lt;/p&gt;

&lt;p&gt;Or I could be even lazier and look for a pre-built solution in Jekyll. There‚Äôs gotta be something, right?&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin-bottom: 1.5rem;&quot;&gt;&lt;img src=&quot;https://media.giphy.com/media/3ohzAaRJ1e5SvhIWWY/giphy.gif&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Yup! &lt;a href=&quot;https://jekyllrb.com/docs/datafiles/&quot;&gt;This&lt;/a&gt; article in the Jekyll documentation shows how to iterate over YAML, JSON, or CSV data files via Liquid. Now I can ‚Äúavoid copy-pasting large chunks of code in [my] Jekyll [template].‚Äù (You read my mind, Jekyll Docs.) After scanning some Liquid documentation I figured out how to sort it, too.&lt;/p&gt;

&lt;p&gt;Cheers to (not?) being lazy.ü•Ç&lt;/p&gt;</content><author><name></name></author><category term="garden" /><summary type="html">Programmers often say they‚Äôre lazy. They say this meaning that they would rather invent (or discover) a solution that cuts out grunt work than do the same tasks over and over.</summary></entry></feed>